// api.proto

// @generated by protoc-gen-es v2.6.3
// @generated from file slotpb/v1/slot.proto (package slotpb.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file slotpb/v1/slot.proto.
 */
export declare const file_slotpb_v1_slot: GenFile;

/**
 * @generated from message slotpb.v1.GateWayRequest
 */
export declare type GateWayRequest = Message<"slotpb.v1.GateWayRequest"> & {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * @generated from field: uint32 ope_code = 2;
   */
  opeCode: number;

  /**
   * @generated from field: bytes msg = 3;
   */
  msg: Uint8Array;
};

/**
 * Describes the message slotpb.v1.GateWayRequest.
 * Use `create(GateWayRequestSchema)` to create a new message.
 */
export declare const GateWayRequestSchema: GenMessage<GateWayRequest>;

/**
 * @generated from message slotpb.v1.GateWayResponse
 */
export declare type GateWayResponse = Message<"slotpb.v1.GateWayResponse"> & {
  /**
   * @generated from field: bytes msg = 1;
   */
  msg: Uint8Array;
};

/**
 * Describes the message slotpb.v1.GateWayResponse.
 * Use `create(GateWayResponseSchema)` to create a new message.
 */
export declare const GateWayResponseSchema: GenMessage<GateWayResponse>;

/**
 * @generated from message slotpb.v1.Table
 */
export declare type Table = Message<"slotpb.v1.Table"> & {
  /**
   * @generated from field: repeated slotpb.v1.Reel reels = 1;
   */
  reels: Reel[];
};

/**
 * Describes the message slotpb.v1.Table.
 * Use `create(TableSchema)` to create a new message.
 */
export declare const TableSchema: GenMessage<Table>;

/**
 * @generated from message slotpb.v1.Reel
 */
export declare type Reel = Message<"slotpb.v1.Reel"> & {
  /**
   * @generated from field: repeated string symbols = 1;
   */
  symbols: string[];
};

/**
 * Describes the message slotpb.v1.Reel.
 * Use `create(ReelSchema)` to create a new message.
 */
export declare const ReelSchema: GenMessage<Reel>;

/**
 * @generated from message slotpb.v1.Coordinate
 */
export declare type Coordinate = Message<"slotpb.v1.Coordinate"> & {
  /**
   * @generated from field: int32 x = 1;
   */
  x: number;

  /**
   * @generated from field: int32 y = 2;
   */
  y: number;
};

/**
 * Describes the message slotpb.v1.Coordinate.
 * Use `create(CoordinateSchema)` to create a new message.
 */
export declare const CoordinateSchema: GenMessage<Coordinate>;

/**
 * @generated from message slotpb.v1.PlayOut
 */
export declare type PlayOut = Message<"slotpb.v1.PlayOut"> & {
  /**
   * @generated from field: bool is_jp = 1;
   */
  isJp: boolean;

  /**
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message slotpb.v1.PlayOut.
 * Use `create(PlayOutSchema)` to create a new message.
 */
export declare const PlayOutSchema: GenMessage<PlayOut>;

/**
 * @generated from message slotpb.v1.JpOut
 */
export declare type JpOut = Message<"slotpb.v1.JpOut"> & {
  /**
   * @generated from field: slotpb.v1.Table table = 1;
   */
  table?: Table;

  /**
   * @generated from field: uint64 score = 2;
   */
  score: bigint;

  /**
   * @generated from field: slotpb.v1.JPType type = 3;
   */
  type: JPType;
};

/**
 * Describes the message slotpb.v1.JpOut.
 * Use `create(JpOutSchema)` to create a new message.
 */
export declare const JpOutSchema: GenMessage<JpOut>;

/**
 * @generated from enum slotpb.v1.JPType
 */
export enum JPType {
  /**
   * @generated from enum value: JP_TYPE_UNSPECIFIED = 0;
   */
  JP_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: JP_TYPE_MINOR = 1;
   */
  JP_TYPE_MINOR = 1,

  /**
   * @generated from enum value: JP_TYPE_MAJOR = 2;
   */
  JP_TYPE_MAJOR = 2,

  /**
   * @generated from enum value: JP_TYPE_GRAND = 3;
   */
  JP_TYPE_GRAND = 3,
}

/**
 * Describes the enum slotpb.v1.JPType.
 */
export declare const JPTypeSchema: GenEnum<JPType>;

/**
 * @generated from service slotpb.v1.SlotService
 */
export declare const SlotService: GenService<{
  /**
   * @generated from rpc slotpb.v1.SlotService.GateWay
   */
  gateWay: {
    methodKind: "unary";
    input: typeof GateWayRequestSchema;
    output: typeof GateWayResponseSchema;
  },
}>;

