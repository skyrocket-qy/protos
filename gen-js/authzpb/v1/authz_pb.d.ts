// @generated by protoc-gen-es v2.6.3
// @generated from file authzpb/v1/authz.proto (package authzpb.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Cursor, Filter, Sorter } from "../../pkgpb/v1/pkg_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file authzpb/v1/authz.proto.
 */
export declare const file_authzpb_v1_authz: GenFile;

/**
 * @generated from message authzpb.v1.CheckIn
 */
export declare type CheckIn = Message<"authzpb.v1.CheckIn"> & {
  /**
   * @generated from field: string sbj_ns = 1;
   */
  sbjNs: string;

  /**
   * @generated from field: string sbj_id = 2;
   */
  sbjId: string;

  /**
   * @generated from field: string rel = 3;
   */
  rel: string;

  /**
   * @generated from field: string obj_ns = 4;
   */
  objNs: string;

  /**
   * @generated from field: string obj_id = 5;
   */
  objId: string;
};

/**
 * Describes the message authzpb.v1.CheckIn.
 * Use `create(CheckInSchema)` to create a new message.
 */
export declare const CheckInSchema: GenMessage<CheckIn>;

/**
 * @generated from message authzpb.v1.CheckOut
 */
export declare type CheckOut = Message<"authzpb.v1.CheckOut"> & {
  /**
   * @generated from field: bool is_allowed = 1;
   */
  isAllowed: boolean;
};

/**
 * Describes the message authzpb.v1.CheckOut.
 * Use `create(CheckOutSchema)` to create a new message.
 */
export declare const CheckOutSchema: GenMessage<CheckOut>;

/**
 * @generated from message authzpb.v1.Tuple
 */
export declare type Tuple = Message<"authzpb.v1.Tuple"> & {
  /**
   * @generated from field: uint64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: string sbj_ns = 2;
   */
  sbjNs: string;

  /**
   * @generated from field: string sbj_id = 3;
   */
  sbjId: string;

  /**
   * @generated from field: string rel = 4;
   */
  rel: string;

  /**
   * @generated from field: string obj_ns = 5;
   */
  objNs: string;

  /**
   * @generated from field: string obj_id = 6;
   */
  objId: string;
};

/**
 * Describes the message authzpb.v1.Tuple.
 * Use `create(TupleSchema)` to create a new message.
 */
export declare const TupleSchema: GenMessage<Tuple>;

/**
 * @generated from message authzpb.v1.TupleFilter
 */
export declare type TupleFilter = Message<"authzpb.v1.TupleFilter"> & {
  /**
   * @generated from field: optional string sbj_ns = 1;
   */
  sbjNs?: string;

  /**
   * @generated from field: optional string sbj_id = 2;
   */
  sbjId?: string;

  /**
   * @generated from field: optional string rel = 3;
   */
  rel?: string;

  /**
   * @generated from field: optional string obj_ns = 4;
   */
  objNs?: string;

  /**
   * @generated from field: optional string obj_id = 5;
   */
  objId?: string;
};

/**
 * Describes the message authzpb.v1.TupleFilter.
 * Use `create(TupleFilterSchema)` to create a new message.
 */
export declare const TupleFilterSchema: GenMessage<TupleFilter>;

/**
 * @generated from message authzpb.v1.ListTuplesIn
 */
export declare type ListTuplesIn = Message<"authzpb.v1.ListTuplesIn"> & {
  /**
   * created_at, email, name, is_email_confirmed, is_active, auth_type, org_name
   *
   * @generated from field: repeated pkgpb.v1.Filter filters = 1;
   */
  filters: Filter[];

  /**
   * created_at, auth_type, org_name
   *
   * @generated from field: repeated pkgpb.v1.Sorter sorters = 2;
   */
  sorters: Sorter[];

  /**
   * @generated from field: pkgpb.v1.Cursor cursor = 3;
   */
  cursor?: Cursor;
};

/**
 * Describes the message authzpb.v1.ListTuplesIn.
 * Use `create(ListTuplesInSchema)` to create a new message.
 */
export declare const ListTuplesInSchema: GenMessage<ListTuplesIn>;

/**
 * @generated from message authzpb.v1.ListTuplesOut
 */
export declare type ListTuplesOut = Message<"authzpb.v1.ListTuplesOut"> & {
  /**
   * @generated from field: repeated authzpb.v1.Tuple tuples = 1;
   */
  tuples: Tuple[];

  /**
   * @generated from field: bytes next_cursor = 2;
   */
  nextCursor: Uint8Array;
};

/**
 * Describes the message authzpb.v1.ListTuplesOut.
 * Use `create(ListTuplesOutSchema)` to create a new message.
 */
export declare const ListTuplesOutSchema: GenMessage<ListTuplesOut>;

/**
 * @generated from message authzpb.v1.Instance
 */
export declare type Instance = Message<"authzpb.v1.Instance"> & {
  /**
   * @generated from field: string ns = 1;
   */
  ns: string;

  /**
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message authzpb.v1.Instance.
 * Use `create(InstanceSchema)` to create a new message.
 */
export declare const InstanceSchema: GenMessage<Instance>;

/**
 * @generated from message authzpb.v1.TreeNode
 */
export declare type TreeNode = Message<"authzpb.v1.TreeNode"> & {
  /**
   * @generated from field: authzpb.v1.Instance root = 1;
   */
  root?: Instance;

  /**
   * @generated from field: map<string, authzpb.v1.TreeNode> children = 2;
   */
  children: { [key: string]: TreeNode };
};

/**
 * Describes the message authzpb.v1.TreeNode.
 * Use `create(TreeNodeSchema)` to create a new message.
 */
export declare const TreeNodeSchema: GenMessage<TreeNode>;

/**
 * @generated from message authzpb.v1.DeleteTuplesIn
 */
export declare type DeleteTuplesIn = Message<"authzpb.v1.DeleteTuplesIn"> & {
  /**
   * @generated from oneof authzpb.v1.DeleteTuplesIn.mode
   */
  mode: {
    /**
     * @generated from field: authzpb.v1.DeleteTuples tuples = 1;
     */
    value: DeleteTuples;
    case: "tuples";
  } | {
    /**
     * @generated from field: authzpb.v1.TupleFilter filter = 2;
     */
    value: TupleFilter;
    case: "filter";
  } | {
    /**
     * @generated from field: authzpb.v1.DeleteTupleIds ids = 3;
     */
    value: DeleteTupleIds;
    case: "ids";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message authzpb.v1.DeleteTuplesIn.
 * Use `create(DeleteTuplesInSchema)` to create a new message.
 */
export declare const DeleteTuplesInSchema: GenMessage<DeleteTuplesIn>;

/**
 * @generated from message authzpb.v1.DeleteTuples
 */
export declare type DeleteTuples = Message<"authzpb.v1.DeleteTuples"> & {
  /**
   * @generated from field: repeated authzpb.v1.Tuple tuples = 1;
   */
  tuples: Tuple[];
};

/**
 * Describes the message authzpb.v1.DeleteTuples.
 * Use `create(DeleteTuplesSchema)` to create a new message.
 */
export declare const DeleteTuplesSchema: GenMessage<DeleteTuples>;

/**
 * @generated from message authzpb.v1.DeleteTupleIds
 */
export declare type DeleteTupleIds = Message<"authzpb.v1.DeleteTupleIds"> & {
  /**
   * @generated from field: repeated uint64 ids = 1;
   */
  ids: bigint[];
};

/**
 * Describes the message authzpb.v1.DeleteTupleIds.
 * Use `create(DeleteTupleIdsSchema)` to create a new message.
 */
export declare const DeleteTupleIdsSchema: GenMessage<DeleteTupleIds>;

/**
 * @generated from service authzpb.v1.AuthzService
 */
export declare const AuthzService: GenService<{
  /**
   * @generated from rpc authzpb.v1.AuthzService.CreateTuple
   */
  createTuple: {
    methodKind: "unary";
    input: typeof TupleSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc authzpb.v1.AuthzService.ListTuples
   */
  listTuples: {
    methodKind: "unary";
    input: typeof ListTuplesInSchema;
    output: typeof ListTuplesOutSchema;
  },
  /**
   * @generated from rpc authzpb.v1.AuthzService.DeleteTuples
   */
  deleteTuples: {
    methodKind: "unary";
    input: typeof DeleteTuplesInSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc authzpb.v1.AuthzService.Check
   */
  check: {
    methodKind: "unary";
    input: typeof CheckInSchema;
    output: typeof CheckOutSchema;
  },
}>;

